spring.application.name=Tunami

# Thymeleaf
spring.thymeleaf.prefix=classpath:/_/
#,classpath:/fragments/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
# 页面热部署
spring.thymeleaf.cache=false

# 该项会变更默认静态资源路径，默认有classpath:/static,classpath:/public,classpath:/resources,classpath:/META-INF/resources
# 接收的请求地址，默认为/**，只能一个
spring.mvc.static-path-pattern=/assets/**
# pattern 指向的实际路径，可有多个
spring.resources.static-locations=classpath:/assets, file:${value.repository}

# Database
spring.datasource.url=jdbc:mysql://localhost:3306/kj?useUnicode=true&characterEncoding=UTF8 
spring.datasource.username=root
spring.datasource.password=redskirt
spring.datasource.driver-class-name=com.mysql.jdbc.Driver  

### Druid database connection pool
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource  

# Initial
spring.datasource.initialSize=5  
spring.datasource.minIdle=5  
spring.datasource.maxActive=20  

# Timeout
spring.datasource.maxWait=60000  

# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒  
#spring.datasource.timeBetweenEvictionRunsMillis=60000  

# 配置一个连接在池中最小生存的时间，单位是毫秒  
spring.datasource.minEvictableIdleTimeMillis=300000  
spring.datasource.validationQuery=select 'x'  
spring.datasource.testWhileIdle=true  
spring.datasource.testOnBorrow=true  
spring.datasource.testOnReturn=true  
# 打开PSCache，并且指定每个连接上PSCache的大小  
spring.datasource.poolPreparedStatements=true  
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20  
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙  
spring.datasource.filters=stat,wall,log4j  
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录  
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000  
# 合并多个DruidDataSource的监控数据  
#spring.datasource.useGlobalDataSourceStat=true

# Logging
logging.level.root=info
logging.level.org.springframework.web=INFO
#logging.path=${user.home}/logs
#logging.file=${spring.application.name}.log

# Domain name
tunami.domainName=localhost
tunami.port=8080
server.port=${tunami.port}

# static
value.repository=/Users/sasaki/git/doc/kj/vsh/

# deploy
#spring.datasource.password=root
#tunami.port=80
#value.repository=D:\\FTP\\vsh